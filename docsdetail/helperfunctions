  mapping(bytes32 => bool) foundP; //foundationid to bool


  function getFoundAddresses(address _addr) constant returns (address[]) {
    Foundation f = Foundation(foundationAddress);
    bytes32 foundId = f.resolveToName(_addr);
    uint addrLength = f.getAddrLength(foundId);
    address[] storage allAddr;
    for (uint i=0; i < addrLength; i++) {
      allAddr.push(f.getAddrIndex(foundId, i));
    }
    return allAddr;
  }

  function getFoundId(address _addr) constant returns (bytes32) {
    Foundation f = Foundation(foundationAddress);
    bytes32 foundId = f.resolveToName(_addr);
    return foundId;
  }

  function balanceOfF(address _owner) private constant returns (uint balance) {
    uint totalBalance;
    address[] memory allAddr=getFoundAddresses(_owner);
    for (uint p = 0; p < allAddr.length; p++) {
      address oneAddress=allAddr[p];
      totalBalance=totalBalance + balances[oneAddress];
    }
    return totalBalance;
  }
